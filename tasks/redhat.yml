# base configuration
- name: wait for {{ inventory_hostname }}
  wait_for_connection:
  delay: 60
  timeout: 300

# hostname configuration
- name: change hostname to {{ inventory_hostname }}
  hostname:
    name: '{{ inventory_hostname }}'
  register: hostname

# dependency configuration
- name: install agent dependencies (redhat)
  yum:
    name: '{{ artifactory_url }}{{ item.name }}'
    state: installed
    validate_certs: no
    disable_plugin: "yum-rhn-plugin"
    disablerepo: "*"
  with_items:
    - '{{ redhat_agent_dependencies }}'

# acm certificate rotation checking
- name: copy certificates to certificate store
  aws_acm_autorenew:
     hostname: '{{ inventory_hostname }}'
     passphrase: '{{ inventory_hostname }}'
     cert_path: '{{ local_cert_path }}/{{ inventory_hostname }}.pem'
     trust_path: '{{ local_cert_path }}/{{ inventory_hostname }}-trust.pem'
     key_path: '{{ local_key_path }}/{{ inventory_hostname }}.pem'
  notify: update-ca-trust
  ignore_errors: yes

# drive configuration
- name: look for nvme devices
  command: nvme list
  register: nvme_exist
  changed_when: False
  check_mode: no

- name: map-ebs-nvme automation
  block:
    - name: copy map-ebs-nvme
      copy:
        src: files/map-ebs-nvme.sh
        dest: "/usr/local/bin/map-ebs-nvme"
        owner: root
        group: root
        mode: 0755

    - name: configure map-ebs-nvme rules
      copy:
        src: files/map-ebs-nvme.rules
        dest: "/etc/udev/rules.d/map-ebs-nvme.rules"
        owner: root
        group: root
        mode: 0644

    - name: run map-ebs-nvme
      command: /usr/local/bin/map-ebs-nvme

  when: not(nvme_exist.stdout | regex_search('No NVMe devices detected.'))
